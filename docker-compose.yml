version: '3'

services:

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    ports:
      - 9443:9443
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nginx-proxy-manager-network

  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 81:81
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    networks:
      - nginx-proxy-manager-network

  wg-easy:
    container_name: wg-easy
    image: ghcr.io/wg-easy/wg-easy
    restart: unless-stopped
    ports:
      - "${WG_PORT}:51820/udp"
      - "51821:51821/tcp"
    environment:
      - LANG=en
      - WG_HOST=${HOST_PUBLIC_ADDRESS}
      - PASSWORD=${WG_PASSWORD}
      - WG_PORT=${WG_PORT}
      - WG_DEFAULT_ADDRESS=10.8.0.x
      - WG_DEFAULT_DNS=1.1.1.1
    volumes:
      - ./wireguard:/etc/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      - nginx-proxy-manager-network

  ntfy:
    container_name: ntfy
    image: binwiederhier/ntfy
    restart: unless-stopped
    command:
      - serve
    environment:
      - TZ=${HOST_TIMEZONE}
      - NTFY_AUTH_DEFAULT_ACCESS=deny-all
      - NTFY_UPSTREAM_BASE_URL=${NTFY_UPSTREAM_BASE_URL}
      - NTFY_BASE_URL=${NTFY_BASE_URL}
      - NTFY_AUTH_FILE=${NTFY_AUTH_FILE}
    volumes:
      - ./ntfy:/var/lib/ntfy
    networks:
      - nginx-proxy-manager-network

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_NOTIFICATION_URL=generic+${WATCHTOWER_NOTIFICATION_URL}
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30

  teamspeak:
    container_name: teamspeak
    image: teamspeak:latest
    restart: unless-stopped
    ports:
      - "9987:9987/udp"
      - "9987:9987/tcp"
      - 30033:30033
    environment:
      TS3SERVER_LICENSE: accept
    volumes:
      - ./teamspeak/teamspeak/data:/var/ts3server/
    networks:
      - teamspeak-local

networks:
  nginx-proxy-manager-network:
  teamspeak-local:
    driver: bridge
